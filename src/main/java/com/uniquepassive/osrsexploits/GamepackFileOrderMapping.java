package com.uniquepassive.osrsexploits;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;

/**
 * The OSRS build process outputs obfuscated classes into the resulting gamepack JAR
 * in the same order as they are inputted (probably).
 *
 * This follows that two different revisions have the classes in the same order in the JAR,
 * which means that you can map them if there hasn't been significant class name changes/additions
 * etc between the two revisions.
 */
public class GamepackFileOrderMapping {

    public static void main(String[] args) throws IOException {
        if (args.length >= 2) {
            List<String> classNames = getClassNames(new JarFile(args[0]));
            List<String> classNames2 = getClassNames(new JarFile(args[1]));

            for (int i = 0; i < classNames.size(); i++) {
                System.out.println(classNames.get(i) + " = " + classNames2.get(i));
            }
        } else {
            System.out.println("Example arguments: \"gamepack_127.jar gamepack_128.jar\"");
        }
    }

    private static List<String> getClassNames(JarFile gamePack) {
        List<String> classNames = new ArrayList<>();

        Enumeration<JarEntry> fileEntries = gamePack.entries();

        while (fileEntries.hasMoreElements()) {
            String fileName = fileEntries.nextElement().getName();

            if (fileName.endsWith(".class")) {
                classNames.add(fileName.substring(0, fileName.indexOf(".")));
            }
        }

        return classNames;
    }
}
